{"version":3,"sources":["main.js"],"names":["Site","mobileThreshold","init","_this","this","fixWidows","$","window","resize","onResize","document","ready","Video","each","string","html","replace","playing","toPlay","$videos","$video1","on","handleCanPlayThrough","bind","canAutoplay","threshold","off","bindScroll","scroll","event","scrollTop","handleScroll","playAndSwitch","$videoToPlay","play","removeClass","addClass","currentTime","WP","wp_debug","text"],"mappings":"AAGAA,MACEC,gBAAiB,IACjBC,KAAM,WACJ,GAAIC,OAAQC,IAEZD,OAAME,YAENC,EAAEC,QAAQC,OAAO,WACfL,MAAMM,aAGRH,EAAEI,UAAUC,MAAM,WAChBR,MAAMS,MAAMV,UAKhBO,SAAU,aAKVJ,UAAW,WAETC,EAAE,kBAAkBO,KAAK,WACvB,GAAIC,QAASR,EAAEF,MAAMW,MACrBD,QAASA,OAAOE,QAAQ,YAAY,YACpCV,EAAEF,MAAMW,KAAKD,YAKnBd,KAAKY,OACHK,SAAS,EACTC,OAAQ,EACRhB,KAAO,WACL,GAAIC,OAAQC,IAGZD,OAAMgB,QAAUb,EAAE,iBAGlBH,MAAMiB,QAAUd,EAAE,mBAElBH,MAAMiB,QAAQC,GAAG,wBAAyBlB,MAAMmB,qBAAqBC,KAAKpB,QAG1EA,MAAMqB,aAAc,EAGpBrB,MAAMsB,UAAY,KAIpBH,qBAAsB,WACpB,GAAInB,OAAQC,IAGZD,OAAMiB,QAAQM,IAAI,yBAGlBvB,MAAMwB,cAGRA,WAAY,WACV,GAAIxB,OAAQC,IAGZE,GAAEC,QAAQqB,OAAO,SAASC,OAExB,GAAIC,WAAYxB,EAAEC,QAAQuB,WAG1B3B,OAAM4B,aAAaD,cAIvBC,aAAc,SAASD,WACrB,GAAI3B,OAAQC,IAETD,OAAMqB,eACHrB,MAAMe,QAAUY,UAAY3B,MAAMsB,UACpCtB,MAAM6B,gBACE7B,MAAMe,QAAUY,UAA8B,GAAlB3B,MAAMsB,WAC1CtB,MAAM6B,kBAKZA,cAAe,WACb,GAAI7B,OAAQC,KAGR6B,aAAe3B,EAAEH,MAAMgB,QAAQhB,MAAMe,QAGrCf,OAAMc,UAGRgB,aAAa,GAAGC,OAGhB/B,MAAMc,SAAU,EAGhBgB,aAAaZ,GAAG,QAAS,SAASQ,OAEhC1B,MAAMc,SAAU,EAGhBd,MAAMgB,QAAQgB,YAAY,YAC1BF,aAAaG,SAAS,YAGtBH,aAAa,GAAGI,YAAc,EAG9BlC,MAAMe,OAASf,MAAMe,OAAS,EAAI,EAGlCe,aAAaP,IAAI,SAGdY,GAAGC,UACJjC,EAAE,oBAAoBkC,KAAKrC,MAAMe,QAInCf,MAAM4B,aAAazB,EAAEC,QAAQuB,kBAOrC9B,KAAKE","file":"main.min.js","sourcesContent":["/* jshint browser: true, devel: true, indent: 2, curly: true, eqeqeq: true, futurehostile: true, latedef: true, undef: true, unused: true */\n/* global $, jQuery, document, Site, Modernizr */\n\nSite = {\n  mobileThreshold: 601,\n  init: function() {\n    var _this = this;\n\n    _this.fixWidows();\n\n    $(window).resize(function(){\n      _this.onResize();\n    });\n\n    $(document).ready(function () {\n      _this.Video.init();\n    });\n\n  },\n\n  onResize: function() {\n    var _this = this;\n\n  },\n\n  fixWidows: function() {\n    // utility class mainly for use on headines to avoid widows [single words on a new line]\n    $('.js-fix-widows').each(function(){\n      var string = $(this).html();\n      string = string.replace(/ ([^ ]*)$/,'&nbsp;$1');\n      $(this).html(string);\n    });\n  },\n};\n\nSite.Video = {\n  playing: false,\n  toPlay: 0,\n  init:  function() {\n    var _this = this;\n\n    // Selector for both videos\n    _this.$videos = $('.splash-video');\n\n    // First video\n    _this.$video1 = $('#splash-video-1');\n\n    _this.$video1.on('canplaythrough.video1', _this.handleCanPlayThrough.bind(_this));\n\n    // TODO: Detect can autoplay\n    _this.canAutoplay = true;\n\n    // TODO: Get threshold based on video position/margin/something\n    _this.threshold = 100;\n\n  },\n\n  handleCanPlayThrough: function() {\n    var _this = this;\n\n    // Unbind from this event so it only happens once\n    _this.$video1.off('canplaythrough.video1');\n\n    // Bind scroll\n    _this.bindScroll();\n  },\n\n  bindScroll: function() {\n    var _this = this;\n\n    // On window scroll\n    $(window).scroll(function(event) {\n      // Get the scroll position\n      var scrollTop = $(window).scrollTop();\n\n      // ...handle it\n      _this.handleScroll(scrollTop);\n    });\n  },\n\n  handleScroll: function(scrollTop) {\n    var _this = this;\n\n    if(_this.canAutoplay) {\n      if(!_this.toPlay && scrollTop > _this.threshold) { // First video is to play and postition is below threshold\n        _this.playAndSwitch();\n      } else if(_this.toPlay && scrollTop < _this.threshold * 0.8) { // second video is to play and postition is above threshold * 0.8. Value was made up, it will change based on design\n        _this.playAndSwitch();\n      }\n    }\n  },\n\n  playAndSwitch: function() {\n    var _this = this;\n\n    // Get video to play\n    var $videoToPlay = $(_this.$videos[_this.toPlay]);\n\n    // Check it isn't playing already\n    if(!_this.playing) {\n\n      // Play video\n      $videoToPlay[0].play();\n\n      // Set playing to true\n      _this.playing = true;\n\n      // Listen for video ended event\n      $videoToPlay.on('ended', function(event) {\n        // Set playing to false\n        _this.playing = false;\n\n        // Switch videos\n        _this.$videos.removeClass('u-hidden');\n        $videoToPlay.addClass('u-hidden');\n\n        // Reset position to 0\n        $videoToPlay[0].currentTime = 0;\n\n        // Switch toPlay value\n        _this.toPlay = _this.toPlay ? 0 : 1;\n\n        // Remove event\n        $videoToPlay.off('ended');\n\n        // DEBUG\n        if(WP.wp_debug) {\n          $('#video-displayed').text(_this.toPlay);\n        }\n\n        // Recheck scroll position in case user scrolled while playing\n        _this.handleScroll($(window).scrollTop());\n\n      });\n    }\n  },\n};\n\nSite.init();\n"]}